on:
  workflow_dispatch:
  push:
    tags:
    - 'v*'

name: Create release and build artifacts

jobs:
  build_win_cuda12_9:
    name: Windows CUDA 12.9
    runs-on: windows-2025
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      # - name: Install CUDA
      #   run: |
      #     powershell -Command "Invoke-WebRequest https://developer.download.nvidia.com/compute/cuda/12.9.0/network_installers/cuda_12.9.0_windows_network.exe -OutFile .\cuda_setup.exe"
      #     start /wait .\cuda_setup.exe -s
      #   shell: cmd
      - uses: Jimver/cuda-toolkit@v0.2.28
        id: cuda-toolkit
        with:
          cuda: '12.9.0'
      - name: Build project on Windows
        run: |
          cmake . -G "Visual Studio 17 2022" -DCUDA_TOOLKIT_ROOT_DIR="C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.9"
          cd "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin"
          .\MSBuild.exe /p:Configuration=Release $Env:GITHUB_WORKSPACE\xmrig-cuda.sln
          cd $Env:GITHUB_WORKSPACE
          dir $Env:GITHUB_WORKSPACE\Release
          7z a -tzip -mx cuda12_9.zip Release
      - name: Upload Windows build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cuda12_9
          path: cuda12_9.zip

  build_win_cuda11_4:
    name: Windows CUDA 11.4
    runs-on: windows-2019
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Install CUDA
        run: |
          powershell -Command "Invoke-WebRequest https://developer.download.nvidia.com/compute/cuda/11.4.0/network_installers/cuda_11.4.0_win10_network.exe -OutFile .\cuda_setup.exe"
          start /wait .\cuda_setup.exe -s
        shell: cmd
      - name: Build project on Windows
        run: |
          cmake . -G "Visual Studio 16 2019" -DCUDA_TOOLKIT_ROOT_DIR="C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.4"
          cd "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin"
          .\MSBuild.exe /p:Configuration=Release $Env:GITHUB_WORKSPACE\xmrig-cuda.sln || exit 1
          cd $Env:GITHUB_WORKSPACE
          copy Release\*.dll .
          7z a -tzip -mx cuda11_4.zip *.dll
      - name: Upload Windows build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cuda11_4
          path: cuda11_4.zip

  build_win_cuda11_3:
    name: Windows CUDA 11.3
    runs-on: windows-2019
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Install CUDA
        run: |
          powershell -Command "Invoke-WebRequest https://developer.download.nvidia.com/compute/cuda/11.3.0/network_installers/cuda_11.3.0_win10_network.exe -OutFile .\cuda_setup.exe"
          start /wait .\cuda_setup.exe -s
        shell: cmd
      - name: Build project on Windows
        run: |
          cmake . -G "Visual Studio 16 2019" -DCUDA_TOOLKIT_ROOT_DIR="C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.3"
          cd "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin"
          .\MSBuild.exe /p:Configuration=Release $Env:GITHUB_WORKSPACE\xmrig-cuda.sln || exit 1
          cd $Env:GITHUB_WORKSPACE
          copy Release\*.dll .
          7z a -tzip -mx cuda11_3.zip *.dll
      - name: Upload Windows build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cuda11_3
          path: cuda11_3.zip

  build_win_cuda11_0:
    name: Windows CUDA 11.0
    runs-on: windows-2019
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Install CUDA
        run: |
          powershell -Command "Invoke-WebRequest http://developer.download.nvidia.com/compute/cuda/11.0.1/network_installers/cuda_11.0.1_win10_network.exe -OutFile .\cuda_setup.exe"
          start /wait .\cuda_setup.exe -s nvcc_11.0 cudart_11.0 nvrtc_11.0 nvrtc_dev_11.0 nvml_dev_11.0
        shell: cmd
      - name: Build project on Windows
        run: |
          cmake . -G "Visual Studio 16 2019" -DCUDA_TOOLKIT_ROOT_DIR="C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.0"
          cd "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin"
          .\MSBuild.exe /p:Configuration=Release $Env:GITHUB_WORKSPACE\xmrig-cuda.sln || exit 1
          cd $Env:GITHUB_WORKSPACE
          copy Release\*.dll .
          7z a -tzip -mx cuda11_0.zip *.dll
      - name: Upload Windows build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cuda11_0
          path: cuda11_0.zip

  build_win_cuda10_2:
    name: Windows CUDA 10.2
    runs-on: windows-2019
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Install CUDA
        run: |
          powershell -Command "Invoke-WebRequest http://developer.download.nvidia.com/compute/cuda/10.2/Prod/network_installers/cuda_10.2.89_win10_network.exe -OutFile .\cuda_setup.exe"
          start /wait .\cuda_setup.exe -s nvcc_10.2 cudart_10.2 nvrtc_10.2 nvrtc_dev_10.2 nvml_dev_10.2
        shell: cmd
      - name: Build project on Windows
        run: |
          cmake . -G "Visual Studio 16 2019" -DCUDA_TOOLKIT_ROOT_DIR="C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v10.2"
          cd "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin"
          .\MSBuild.exe /p:Configuration=Release $Env:GITHUB_WORKSPACE\xmrig-cuda.sln || exit 1
          cd $Env:GITHUB_WORKSPACE
          copy Release\*.dll .
          7z a -tzip -mx cuda10_2.zip *.dll
      - name: Upload Windows build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cuda10_2
          path: cuda10_2.zip

  build_win_cuda10_1:
    name: Windows CUDA 10.1
    runs-on: windows-2019
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Install CUDA
        run: |
          powershell -Command "Invoke-WebRequest https://developer.nvidia.com/compute/cuda/10.1/Prod/network_installers/cuda_10.1.105_win10_network.exe -OutFile .\cuda_setup.exe"
          start /wait .\cuda_setup.exe -s nvcc_10.1 cudart_10.1 nvrtc_10.1 nvrtc_dev_10.1 nvml_dev_10.1
        shell: cmd
      - name: Build project on Windows
        run: |
          cmake . -G "Visual Studio 16 2019" -DCUDA_TOOLKIT_ROOT_DIR="C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v10.1"
          cd "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin"
          .\MSBuild.exe /p:Configuration=Release $Env:GITHUB_WORKSPACE\xmrig-cuda.sln || exit 1
          cd $Env:GITHUB_WORKSPACE
          copy Release\*.dll .
          7z a -tzip -mx cuda10_1.zip *.dll
      - name: Upload Windows build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cuda10_1
          path: cuda10_1.zip

  deploy:
    needs: [build_win_cuda12_9, build_win_cuda11_4, build_win_cuda11_3, build_win_cuda11_0, build_win_cuda10_2, build_win_cuda10_1]
    name: Create release and upload artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Set version
        id: version
        run: echo ::set-output name=VERSION::${GITHUB_REF:10}

      - name: Download Windows CUDA 12.9 build artifacts
        uses: actions/download-artifact@v4
        with:
          name: cuda12_9
      - name: Download Windows CUDA 11.4 build artifacts
        uses: actions/download-artifact@v4
        with:
          name: cuda11_4
      - name: Download Windows CUDA 11.3 build artifacts
        uses: actions/download-artifact@v4
        with:
          name: cuda11_3
      - name: Download Windows CUDA 11.0 build artifacts
        uses: actions/download-artifact@v4
        with:
          name: cuda11_0
      - name: Download Windows CUDA 10.2 build artifacts
        uses: actions/download-artifact@v4
        with:
          name: cuda10_2
      - name: Download Windows CUDA 10.1 build artifacts
        uses: actions/download-artifact@v4
        with:
          name: cuda10_1

      - name: Upload Windows CUDA 12.9 build release asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: cuda12_9/cuda12_9.zip
          asset_name: xmrig-cuda-${{steps.version.outputs.VERSION}}-cuda12_9-win64.zip
          asset_content_type: application/zip

      - name: Upload Windows CUDA 11.4 build release asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: cuda11_4/cuda11_4.zip
          asset_name: xmrig-cuda-${{steps.version.outputs.VERSION}}-cuda11_4-win64.zip
          asset_content_type: application/zip

      - name: Upload Windows CUDA 11.3 build release asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: cuda11_3/cuda11_3.zip
          asset_name: xmrig-cuda-${{steps.version.outputs.VERSION}}-cuda11_3-win64.zip
          asset_content_type: application/zip

      - name: Upload Windows CUDA 11.0 build release asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: cuda11_0/cuda11_0.zip
          asset_name: xmrig-cuda-${{steps.version.outputs.VERSION}}-cuda11_0-win64.zip
          asset_content_type: application/zip

      - name: Upload Windows CUDA 10.2 build release asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: cuda10_2/cuda10_2.zip
          asset_name: xmrig-cuda-${{steps.version.outputs.VERSION}}-cuda10_2-win64.zip
          asset_content_type: application/zip

      - name: Upload Windows CUDA 10.1 build release asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: cuda10_1/cuda10_1.zip
          asset_name: xmrig-cuda-${{steps.version.outputs.VERSION}}-cuda10_1-win64.zip
          asset_content_type: application/zip
